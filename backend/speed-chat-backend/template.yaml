AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Speed Chat Backend - State Management API

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.9
    Architectures:
      - x86_64
    Environment:
      Variables:
        TABLE_NAME: !Ref StateTable

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  StateTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: speed-chat-state
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  GetStateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.get_state
      Events:
        GetState:
          Type: Api
          Properties:
            Path: /state
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref StateTable

  UpdateStateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.update_state
      Events:
        UpdateState:
          Type: Api
          Properties:
            Path: /state
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref StateTable

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/state"
  StateTableName:
    Description: DynamoDB Table Name
    Value: !Ref StateTable
